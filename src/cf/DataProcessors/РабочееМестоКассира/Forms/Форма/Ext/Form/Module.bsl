&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КодНачальнойКорневойГруппыТоваров = ХранилищеОбщихНастроек.Загрузить("КодНачальнойКорневойГруппыТоваровРабочегоМестаКассира");
	Если КодНачальнойКорневойГруппыТоваров <> Неопределено Тогда
		НачальнаяКорневаяГруппаТоваров = Справочники.Товары.НайтиПоКоду(КодНачальнойКорневойГруппыТоваров);
	Иначе
		НачальнаяКорневаяГруппаТоваров = Справочники.Товары.ПустаяСсылка();
	КонецЕсли;
	ТекущаяКорневаяГруппаТоваров = НачальнаяКорневаяГруппаТоваров;
	
	КодВалюты = ХранилищеОбщихНастроек.Загрузить("КодВалютыРабочегоМестаКассира");
	Если КодВалюты <> Неопределено Тогда
		Валюта = Справочники.Валюты.НайтиПоКоду(КодВалюты);
	Иначе
		Валюта = Справочники.Валюты.ПустаяСсылка();
	КонецЕсли;

	УстановитьНачальныеНастройкиРабочегоМестаКассира();
	СоздатьКарточкиГруппыПоиска();
	ЗаполнитьРабочееМестоКассира();
	
	ОбновитьКнопкуКОплате();
	ОбновитьСтраницыПозицийЗаказов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНачальныеНастройкиРабочегоМестаКассира()

	КоличествоСтрокКарточек = 0;
	КоличествоСтрокПоиска = 0;
	ТипПриложения = КлиентскоеПриложение.ТипПриложения();
	Если ТипПриложения = ТипКлиентскогоПриложения.ТолстыйКлиент Или
		 ТипПриложения = ТипКлиентскогоПриложения.ТонкийКлиент Тогда
		КоличествоКарточекВСтроке = 4;
		КоличествоСтрокПоиска = 4;
	ИначеЕсли ТипПриложения = ТипКлиентскогоПриложения.ВебКлиент Тогда
		КоличествоКарточекВСтроке = 5;
		КоличествоСтрокПоиска = 4;
	Иначе
		КоличествоКарточекВСтроке = 2;
		КоличествоСтрокПоиска = 10;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОткрытьГруппуТоваров(ГруппаТоваров)
	
	ТекущаяКорневаяГруппаТоваров = ГруппаТоваров;
	ЗаполнитьРабочееМестоКассира();

КонецПроцедуры

&НаСервере
Процедура ОткрытьРодительскуюГруппуТоваров()
	
	Если ТекущаяКорневаяГруппаТоваров.Родитель <> НачальнаяКорневаяГруппаТоваров.Родитель Тогда
		ТекущаяКорневаяГруппаТоваров = ТекущаяКорневаяГруппаТоваров.Родитель;
	КонецЕсли;
	ЗаполнитьРабочееМестоКассира();

КонецПроцедуры

&НаКлиенте
Процедура ОтфильтроватьКарточкиНаКлиенте(СтрокаДляПоиска)

	Если ПустаяСтрока(СтрокаДляПоиска) Тогда
		Элементы.ГруппаКарточек.Видимость = Истина;
		Элементы.ГруппаПоиска.Видимость = Ложь;
	Иначе
		Элементы.ГруппаКарточек.Видимость = Ложь;
		Элементы.ГруппаПоиска.Видимость = Истина;
		ЗаполнитьРезультатыПоиска(СтрокаДляПоиска);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРезультатыПоиска(СтрокаДляПоиска = "", НачальнаяКорневаяГруппаТоваров, КоличествоКарточекПоиска)
	
	РезультатПоиска = Новый Структура("Количество,Товары,СерыйЦвет");
	РезультатПоиска.СерыйЦвет = ЦветаПалитры.Серый;
	РезультатПоиска.Товары = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Товар,
	|	Товары.Наименование КАК Наименование,
	|	ЦеныТоваров.Цена КАК Цена,
	|	Товары.ФайлКартинки.Ссылка КАК ФайлКартинки
	|ИЗ
	|	Справочник.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних(, ВидЦен = &ВидЦен) КАК ЦеныТоваров
	|		ПО (ЦеныТоваров.Товар = Товары.Ссылка)
	|ГДЕ
	|	Товары.Наименование ПОДОБНО &ШаблонДляПоиска СПЕЦСИМВОЛ ""\""
	|	И Товары.Ссылка В ИЕРАРХИИ(&ГруппаТоваров)
	|	И Товары.ПометкаУдаления = ЛОЖЬ
	|	И Товары.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	ШаблонДляПоиска = СтрокаДляПоиска;
	ШаблонДляПоиска = СтрЗаменить(ШаблонДляПоиска, "\", "\\");
	ШаблонДляПоиска = СтрЗаменить(ШаблонДляПоиска, "%", "\%");
	ШаблонДляПоиска = СтрЗаменить(ШаблонДляПоиска, "_", "\_");
	ШаблонДляПоиска = ШаблонДляПоиска + "%";
	Запрос.УстановитьПараметр("ГруппаТоваров", НачальнаяКорневаяГруппаТоваров);
	Запрос.УстановитьПараметр("ШаблонДляПоиска", ШаблонДляПоиска);
	Запрос.УстановитьПараметр("ВидЦен", Справочники.ВидыЦен.Розничная);
	
	Номер = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	РезультатПоиска.Количество = Выборка.Количество();
	Пока Выборка.Следующий() И (Номер < КоличествоКарточекПоиска) Цикл
		Структура = Новый Структура("Товар,Наименование,Цена,Картинка");
		ЗаполнитьЗначенияСвойств(Структура, Выборка);
		Структура.Картинка = ПолучитьНавигационнуюСсылку(Выборка.ФайлКартинки, "ДанныеФайла");
		РезультатПоиска.Товары.Добавить(Структура);
		Номер = Номер + 1;
	КонецЦикла;
	
	Возврат РезультатПоиска;

КонецФункции

&НаКлиенте
Процедура ЗаполнитьРезультатыПоиска(СтрокаДляПоиска = "")
	
	КоличествоКарточекПоиска = КоличествоСтрокПоиска * КоличествоКарточекВСтроке;
	РезультатПоиска = ПолучитьРезультатыПоиска(СтрокаДляПоиска, НачальнаяКорневаяГруппаТоваров, КоличествоКарточекПоиска);
	
	НайденныеТовары.Очистить();
	
	НомерТовара = 0;
	Для каждого Товар из РезультатПоиска.Товары Цикл
		ИндексКарточки = НомерТовара;
		НомерЭлемента = Формат(ИндексКарточки, "ЧН=; ЧГ=");
		ЗаполнитьЗначенияСвойств(НайденныеТовары.Добавить(), Товар);
		
		КарточкаПоиска = Элементы["КарточкаПоиска" + НомерЭлемента];
		КарточкаПоиска.Гиперссылка = Истина;
		КарточкаПоиска.ЦветФона = РезультатПоиска.СерыйЦвет;
		КарточкаПоиска.Видимость = Истина;
		
		КартинкаТовара = Элементы["КартинкаПоиска" + НомерЭлемента];
		КартинкаТовара.Видимость = Истина;
		
		ЗаголовокТовара = Элементы["ЗаголовокПоиска" + НомерЭлемента];
		ЗаголовокТовара.Заголовок = СтрНайтиИВыделитьОформлением(Товар.Наименование, СтрокаДляПоиска);
		
		ЦенаТовара = Элементы["ЦенаПоиска" + НомерЭлемента];
		Если ЗначениеЗаполнено(Товар.Цена) Тогда
			ЦенаТовара.Заголовок = Формат(Товар.Цена, "NFD=2") + Символы.НПП + Валюта;
		Иначе
			ЦенаТовара.Заголовок = "";
		КонецЕсли;
		НомерТовара = НомерТовара + 1;
	КонецЦикла;
	
	Для ИндексКарточки = НомерТовара По КоличествоКарточекПоиска - 1 Цикл
		НомерЭлемента = Формат(ИндексКарточки, "ЧН=; ЧГ=");
		
		КарточкаПоиска = Элементы["КарточкаПоиска" + НомерЭлемента];
		КарточкаПоиска.Гиперссылка = Ложь;
		КарточкаПоиска.ЦветФона = Новый Цвет;
		КарточкаПоиска.Видимость = ИндексКарточки < КоличествоКарточекВСтроке;
		
		КартинкаТовара = Элементы["КартинкаПоиска" + НомерЭлемента];
		КартинкаТовара.Видимость = Ложь;
		
		ЗаголовокТовара = Элементы["ЗаголовокПоиска" + НомерЭлемента];
		ЗаголовокТовара.Заголовок = "";
		
		ЦенаТовара = Элементы["ЦенаПоиска" + НомерЭлемента];
		ЦенаТовара.Заголовок = "";
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРабочееМестоКассира()

	ОчиститьРабочееМестоКассира();
	
	ИндексКарточки = 0;
	ТоварыГруппы.Очистить();
	Если ТекущаяКорневаяГруппаТоваров <> НачальнаяКорневаяГруппаТоваров Тогда
		ДобавитьКарточкуНазад();
		ТоварыГруппы.Добавить();
		ИндексКарточки = 1;
	КонецЕсли;

	// Запрашиваем список товаров (групп товаров)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Товар,
	|	Товары.ЭтоГруппа КАК ЭтоГруппа,
	|	Товары.Наименование КАК Наименование,
	|	Товары.ЦветФона КАК ЦветФона,
	|	Товары.ФайлКартинки КАК ФайлКартинки,
	|	Товары.ОтображатьВРабочемМестеКассира КАК Отображать,
	|	1 КАК Количество,
	|	ЦеныТоваров.Цена КАК Цена
	|ИЗ
	|	Справочник.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних(, ВидЦен = &ВидЦен) КАК ЦеныТоваров
	|		ПО (ЦеныТоваров.Товар = Товары.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Товары КАК Вложенные
	|		ПО (Вложенные.Родитель = Товары.Ссылка)
	|			И (НЕ Вложенные.ПометкаУдаления)
	|			И (НЕ Вложенные.ЭтоГруппа
	|				ИЛИ Вложенные.ОтображатьВРабочемМестеКассира)
	|ГДЕ
	|	Товары.Родитель = &ГруппаТоваров
	|	И (НЕ Товары.ЭтоГруппа
	|			ИЛИ Товары.ОтображатьВРабочемМестеКассира)
	|	И НЕ Товары.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВЫБОР
	|		КОГДА Товары.ЭтоГруппа
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	Наименование
	|ИТОГИ
	|	СУММА(Количество),
	|	СРЕДНЕЕ(Цена)
	|ПО
	|	Товар";
	
	Запрос.УстановитьПараметр("ГруппаТоваров", ТекущаяКорневаяГруппаТоваров);
	Запрос.УстановитьПараметр("ВидЦен", Справочники.ВидыЦен.Розничная);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Если Выборка.ЭтоГруппа Тогда
			Если Выборка.Отображать Тогда
				НоваяСтрока = ТоварыГруппы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.Картинка = ПолучитьНавигационнуюСсылку(Выборка.Товар, "КартинкаГруппы");
				ДобавитьКарточкуГруппыТоваров(Выборка.Товар, Выборка.Наименование, Выборка.ЦветФона.Получить(), ИндексКарточки, Выборка.Количество);
				ИндексКарточки = ИндексКарточки + 1;
			КонецЕсли;
		Иначе
			НоваяСтрока = ТоварыГруппы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Картинка = ПолучитьНавигационнуюСсылку(Выборка.ФайлКартинки, "ДанныеФайла");
			ДобавитьКарточкуТовара(Выборка.Товар, Выборка.Наименование, ИндексКарточки, Выборка.Цена);
			ИндексКарточки = ИндексКарточки + 1;
		КонецЕсли;
	КонецЦикла;
	
	Пока ИндексКарточки < КоличествоКарточекВСтроке Цикл
		ДобавитьПустуюКарточку(ИндексКарточки);
		ИндексКарточки = ИндексКарточки + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКарточкиГруппыПоиска()
	
	ИндексКарточки = 0;
	Для НомерСтроки = 1 По КоличествоСтрокПоиска Цикл
		СтрокаКарточек = Элементы.Добавить("СтрокаПоиска" + НомерСтроки, Тип("ГруппаФормы"), Элементы.ГруппаПоиска);
		СтрокаКарточек.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		СтрокаКарточек.ОтображатьЗаголовок = Ложь;
		СтрокаКарточек.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Для НомерКолонки = 1 По КоличествоКарточекВСтроке Цикл
			ДобавитьКарточкуПоиска(СтрокаКарточек, ИндексКарточки);
			ИндексКарточки = ИндексКарточки + 1;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПоследнююРозничнуюЦенуТовара(Товар)

	// Запрашиваем последнюю розничную цену товара
	ЗапросЦены = Новый Запрос;
	ЗапросЦены.Текст =
		"ВЫБРАТЬ
		|	ЦеныТоваров.Период КАК Период,
		|	ЦеныТоваров.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныТоваров КАК ЦеныТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Товары КАК Товары
		|		ПО ЦеныТоваров.Товар = Товары.Ссылка
		|ГДЕ
		|	Товары.Ссылка = &ТоварСсылка И
		|	ЦеныТоваров.ВидЦен = &ВидЦен
        |УПОРЯДОЧИТЬ ПО
        |    Период УБЫВ";
	ЗапросЦены.УстановитьПараметр("ВидЦен", Справочники.ВидыЦен.Розничная);
	ЗапросЦены.УстановитьПараметр("ТоварСсылка", Товар);
	ВыборкаЦены = ЗапросЦены.Выполнить().Выбрать();
	Если ВыборкаЦены.Количество() > 0 Тогда
		ВыборкаЦены.Следующий();
		Цена = ВыборкаЦены.Цена;
	Иначе
		Цена = Null;	
	КонецЕсли;
	
	Возврат Цена;

КонецФункции

&НаСервере
Процедура ОчиститьРабочееМестоКассира()
	
	Элементы.ГруппаПоиска.Видимость = Ложь;
	Элементы.ГруппаКарточек.Видимость = Истина;

	// Удаляем карточки и строчки с карточками
	МассивЭлементовНаУдаление = Новый Массив;
	Для Каждого СтрокаКарточек Из Элементы.ГруппаКарточек.ПодчиненныеЭлементы Цикл
		Для Каждого Карточка Из СтрокаКарточек.ПодчиненныеЭлементы Цикл
			МассивЭлементовНаУдаление.Добавить(Карточка);
		КонецЦикла;
		МассивЭлементовНаУдаление.Добавить(СтрокаКарточек);
	КонецЦикла;
	Для Каждого ЭлементНаУдаление Из МассивЭлементовНаУдаление Цикл
		Элементы.Удалить(ЭлементНаУдаление);
	КонецЦикла;

	УстановитьНачальныеНастройкиРабочегоМестаКассира();

КонецПроцедуры

&НаСервере
Процедура ДобавитьКарточкуГруппыТоваров(ГруппаТоваров, Наименование, ЦветФона, ИндексКарточки, КоличествоТоваров)
	
	НомерЭлемента = Формат(ИндексКарточки, "ЧН=; ЧГ=");
	СтрокаКарточек = ПолучитьСтрокуКарточек(ИндексКарточки);
	
	Если ЦветФона = Неопределено Тогда
		ЦветФона = Новый Цвет;
	КонецЕсли;

	КарточкаГруппыТоваров = Элементы.Добавить("КарточкаГруппыТоваров" + НомерЭлемента, Тип("ГруппаФормы"), СтрокаКарточек);
	КарточкаГруппыТоваров.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	КарточкаГруппыТоваров.ОтображатьКакКарточку = Истина;
	КарточкаГруппыТоваров.ВидОтображения = ВидОтображенияКарточки.Группа;
	КарточкаГруппыТоваров.ОтображатьЗаголовок = Ложь;
	КарточкаГруппыТоваров.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	КарточкаГруппыТоваров.ЦветФона = ЦветФона;
	КарточкаГруппыТоваров.Ширина = 19;
	КарточкаГруппыТоваров.Высота = 14;
	КарточкаГруппыТоваров.РастягиватьПоГоризонтали = Ложь;
	КарточкаГруппыТоваров.Гиперссылка = Истина;
	КарточкаГруппыТоваров.УстановитьДействие("Нажатие", "КарточкаГруппыТоваровНажатие");

	ЗаголовокГруппыТоваров = Элементы.Добавить("ЗаголовокГруппыТоваров" + НомерЭлемента, Тип("ДекорацияФормы"), КарточкаГруппыТоваров);
	ЗаголовокГруппыТоваров.Вид = ВидДекорацииФормы.Надпись;
	ЗаголовокГруппыТоваров.Заголовок = СтрЗаменить(Наименование, " ", Символы.НПП);
	ЗаголовокГруппыТоваров.Шрифт = ШрифтыСтиля.ЗаголовокТретьегоУровня;
	
	КартинкаГруппыТоваров = Элементы.Добавить("КартинкаГруппыТоваров" + НомерЭлемента, Тип("ПолеФормы"), КарточкаГруппыТоваров);
	КартинкаГруппыТоваров.Вид = ВидПоляФормы.ПолеКартинки;
	КартинкаГруппыТоваров.ПутьКДанным = "ТоварыГруппы[" + НомерЭлемента + "].Картинка";
	КартинкаГруппыТоваров.РазмерКартинки = РазмерКартинки.Пропорционально;
	КартинкаГруппыТоваров.ЦветКартинки = ЦветФона;
	КартинкаГруппыТоваров.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Центр;
	КартинкаГруппыТоваров.Ширина = 12;
	КартинкаГруппыТоваров.Высота = 3;
	КартинкаГруппыТоваров.РастягиватьПоГоризонтали = Ложь;
	КартинкаГруппыТоваров.РастягиватьПоВертикали = Ложь;
	КартинкаГруппыТоваров.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;  
	
	КоличествоГруппыТоваров = Элементы.Добавить("КоличествоГруппыТоваров" + НомерЭлемента, Тип("ДекорацияФормы"), КарточкаГруппыТоваров);
	КоличествоГруппыТоваров.Вид = ВидДекорацииФормы.Надпись;
	КоличествоГруппыТоваров.Заголовок = СтрокаСЧислом(НСтр("ru = ';%1 товар;;%1 товара;%1 товаров;%1 товаров'", "ru"), КоличествоТоваров, ВидЧисловогоЗначения.Количественное, "L=ru");
	КоличествоГруппыТоваров.Шрифт = ШрифтыСтиля.ТекстТретьегоУровня;
	КоличествоГруппыТоваров.ВертикальноеПоложениеВГруппе = ВертикальноеПоложениеЭлемента.Низ;

КонецПроцедуры

&НаСервере
Процедура ДобавитьКарточкуНазад()
	
	СтрокаКарточек = ПолучитьСтрокуКарточек(0);
	ИндексКарточки = 0;

	ЦветКарточки = ЦветаПалитры.Голубой;

	КарточкаНазад = Элементы.Добавить("КарточкаНазад" + ИндексКарточки, Тип("ГруппаФормы"), СтрокаКарточек);
	КарточкаНазад.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	КарточкаНазад.ОтображатьКакКарточку = Истина;
	КарточкаНазад.ОтображатьЗаголовок = Ложь;
	КарточкаНазад.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	КарточкаНазад.ЦветФона = ЦветКарточки;
	КарточкаНазад.Ширина = 19;
	КарточкаНазад.Высота = 14;
	КарточкаНазад.РастягиватьПоГоризонтали = Ложь;
	КарточкаНазад.РастягиватьПоВертикали = Ложь;
	КарточкаНазад.Гиперссылка = Истина;
	КарточкаНазад.УстановитьДействие("Нажатие", "КарточкаНазадНажатие");

	КартинкаНазад = Элементы.Добавить("КартинкаНазад" + ИндексКарточки, Тип("ДекорацияФормы"), КарточкаНазад);
	КартинкаНазад.Вид = ВидДекорацииФормы.Картинка;
	КартинкаНазад.Картинка = БиблиотекаКартинок.ГруппаНазад;
	КартинкаНазад.РазмерКартинки = РазмерКартинки.РеальныйРазмер;
	КартинкаНазад.ЦветКартинки = ЦветКарточки;
	КартинкаНазад.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Центр;
	КартинкаНазад.ВертикальноеПоложениеВГруппе = ВертикальноеПоложениеЭлемента.Центр;
	КартинкаНазад.Ширина = 12;
	КартинкаНазад.Высота = 3;
	КартинкаНазад.Подсказка = НСтр("ru = 'Назад'", "ru");

КонецПроцедуры

&НаСервере
Процедура ДобавитьКарточкуТовара(Товар, Наименование, ИндексКарточки, Цена)

	НомерЭлемента = Формат(ИндексКарточки, "ЧН=; ЧГ=");
	СтрокаКарточек = ПолучитьСтрокуКарточек(ИндексКарточки);
	
	КарточкаТовара = Элементы.Добавить("КарточкаТовара" + НомерЭлемента, Тип("ГруппаФормы"), СтрокаКарточек);
	КарточкаТовара.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	КарточкаТовара.ОтображатьКакКарточку = Истина;
	КарточкаТовара.ОтображатьЗаголовок = Ложь;
	КарточкаТовара.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	КарточкаТовара.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	КарточкаТовара.ЦветФона = ЦветаПалитры.Серый;
	КарточкаТовара.Ширина = 19;
	КарточкаТовара.Высота = 14;
	КарточкаТовара.РастягиватьПоГоризонтали = Ложь;
	КарточкаТовара.Гиперссылка = Истина;
	КарточкаТовара.УстановитьДействие("Нажатие", "КарточкаТовараНажатие");	

	КартинкаТовара = Элементы.Добавить("КартинкаТовара" + НомерЭлемента, Тип("ПолеФормы"), КарточкаТовара);
	КартинкаТовара.Вид = ВидПоляФормы.ПолеКартинки;
	КартинкаТовара.ПутьКДанным = "ТоварыГруппы[" + НомерЭлемента + "].Картинка";
	КартинкаТовара.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КартинкаТовара.РазмерКартинки = РазмерКартинки.Растянуть;
	КартинкаТовара.РастягиватьПоГоризонтали = Истина;
	КартинкаТовара.РастягиватьПоВертикали = Ложь;
	КартинкаТовара.Высота = 3;
		
	ЗаголовокТовара = Элементы.Добавить("ЗаголовокТовара" + НомерЭлемента, Тип("ДекорацияФормы"), КарточкаТовара);
	ЗаголовокТовара.Вид = ВидДекорацииФормы.Надпись;
	ЗаголовокТовара.Заголовок = Товар.Наименование;
	ЗаголовокТовара.Шрифт = ШрифтыСтиля.ЗаголовокТретьегоУровня;
	ЗаголовокТовара.РастягиватьПоГоризонтали = Истина;
	ЗаголовокТовара.Высота = 2;
	ЗаголовокТовара.АвтоМаксимальнаяШирина = Ложь;
	ЗаголовокТовара.МаксимальнаяШирина = 15;
	
	Если ЗначениеЗаполнено(Цена) Тогда
		ЦенаТовара = Элементы.Добавить("ЦенаТовара" + НомерЭлемента, Тип("ДекорацияФормы"), КарточкаТовара);
		ЦенаТовара.Вид = ВидДекорацииФормы.Надпись;
		ЦенаТовара.Заголовок = ФорматироватьЦену(Цена);
		ЦенаТовара.Шрифт = ШрифтыСтиля.ТекстТретьегоУровня;
		ЦенаТовара.ВертикальноеПоложениеВГруппе = ВертикальноеПоложениеЭлемента.Низ;
		ЦенаТовара.РастягиватьПоГоризонтали = Истина;
		ЦенаТовара.АвтоМаксимальнаяШирина = Ложь;
		ЦенаТовара.МаксимальнаяШирина = 15;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДобавитьПустуюКарточку(ИндексКарточки)

	НомерЭлемента = Формат(ИндексКарточки, "ЧН=; ЧГ=");
	СтрокаКарточек = ПолучитьСтрокуКарточек(ИндексКарточки);
	
	КарточкаТовара = Элементы.Добавить("КарточкаТовара" + НомерЭлемента, Тип("ГруппаФормы"), СтрокаКарточек);
	КарточкаТовара.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	КарточкаТовара.ОтображатьКакКарточку = Истина;
	КарточкаТовара.ОтображатьЗаголовок = Ложь;
	КарточкаТовара.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	КарточкаТовара.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	КарточкаТовара.ЦветФона = Новый Цвет;
	КарточкаТовара.Ширина = 19;
	КарточкаТовара.Высота = 14;
	КарточкаТовара.РастягиватьПоГоризонтали = Ложь;
	КарточкаТовара.Доступность = Ложь;
	КарточкаТовара.Гиперссылка = Ложь;

	ЗаголовокТовара = Элементы.Добавить("ЗаголовокТовара" + НомерЭлемента, Тип("ДекорацияФормы"), КарточкаТовара);

КонецПроцедуры

&НаСервере
Процедура ДобавитьКарточкуПоиска(СтрокаКарточек, ИндексКарточки)
	
	НомерЭлемента = Формат(ИндексКарточки, "ЧН=; ЧГ=");
	
	КарточкаТовара = Элементы.Добавить("КарточкаПоиска" + НомерЭлемента, Тип("ГруппаФормы"), СтрокаКарточек);
	КарточкаТовара.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	КарточкаТовара.ОтображатьКакКарточку = Истина;
	КарточкаТовара.ОтображатьЗаголовок = Ложь;
	КарточкаТовара.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	КарточкаТовара.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	КарточкаТовара.ЦветФона = Новый Цвет;
	КарточкаТовара.Ширина = 19;
	КарточкаТовара.Высота = 14;
	КарточкаТовара.РастягиватьПоГоризонтали = Ложь;
	КарточкаТовара.Гиперссылка = Истина;
	КарточкаТовара.Доступность = Истина;
	КарточкаТовара.УстановитьДействие("Нажатие", "КарточкаПоискаНажатие");

	КартинкаТовара = Элементы.Добавить("КартинкаПоиска" + НомерЭлемента, Тип("ПолеФормы"), КарточкаТовара);
	КартинкаТовара.Вид = ВидПоляФормы.ПолеКартинки;
	КартинкаТовара.ПутьКДанным = "НайденныеТовары[" + НомерЭлемента + "].Картинка";
	КартинкаТовара.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КартинкаТовара.РазмерКартинки = РазмерКартинки.Растянуть;
	КартинкаТовара.РастягиватьПоГоризонтали = Истина;
	КартинкаТовара.РастягиватьПоВертикали = Ложь;
	КартинкаТовара.Высота = 3;
	КартинкаТовара.Видимость = Истина;
		
	ЗаголовокТовара = Элементы.Добавить("ЗаголовокПоиска" + НомерЭлемента, Тип("ДекорацияФормы"), КарточкаТовара);
	ЗаголовокТовара.Вид = ВидДекорацииФормы.Надпись;
	ЗаголовокТовара.Шрифт = ШрифтыСтиля.ЗаголовокТретьегоУровня;
	ЗаголовокТовара.РастягиватьПоГоризонтали = Истина;
	ЗаголовокТовара.Высота = 2;
	ЗаголовокТовара.АвтоМаксимальнаяШирина = Ложь;
	ЗаголовокТовара.МаксимальнаяШирина = 15;
	ЗаголовокТовара.Видимость = Истина;
	
	ЦенаТовара = Элементы.Добавить("ЦенаПоиска" + НомерЭлемента, Тип("ДекорацияФормы"), КарточкаТовара);
	ЦенаТовара.Вид = ВидДекорацииФормы.Надпись;
	ЦенаТовара.Шрифт = ШрифтыСтиля.ТекстТретьегоУровня;
	ЦенаТовара.ВертикальноеПоложениеВГруппе = ВертикальноеПоложениеЭлемента.Низ;
	ЦенаТовара.РастягиватьПоГоризонтали = Истина;
	ЦенаТовара.АвтоМаксимальнаяШирина = Ложь;
	ЦенаТовара.МаксимальнаяШирина = 15;
	ЦенаТовара.Видимость = Истина;

КонецПроцедуры

&НаСервере
Функция ПолучитьСтрокуКарточек(ИндексКарточки)
	
	ИндексСтроки = Цел(ИндексКарточки / КоличествоКарточекВСтроке);
	Если КоличествоСтрокКарточек - 1 < ИндексСтроки Тогда
		СтрокаКарточек = Элементы.Добавить("СтрокаКарточек" + КоличествоСтрокКарточек, Тип("ГруппаФормы"), Элементы.ГруппаКарточек);
		СтрокаКарточек.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		СтрокаКарточек.ОтображатьЗаголовок = Ложь;
		СтрокаКарточек.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		КоличествоСтрокКарточек = КоличествоСтрокКарточек + 1;
	КонецЕсли;

	Возврат Элементы.ГруппаКарточек.ПодчиненныеЭлементы.Получить(ИндексСтроки);

КонецФункции

&НаСервере
Процедура СоздатьПозициюЗаказа(Товар, Цена, Количество)
	
	ПозицияЗаказа = ПозицииЗаказов.Добавить();
	ПозицияЗаказа.Товар = Товар;
	ПозицияЗаказа.Цена = Цена;
	ПозицияЗаказа.Количество = Количество;
	ПозицияЗаказа.Сумма = Цена * Количество;
	
	Индекс = ПозицииЗаказов.Индекс(ПозицияЗаказа);
	
	Если Элементы.ПозицииЗаказовСтраница.ПодчиненныеЭлементы.Количество() > 0 Тогда
		ПерваяПозицияЗаказа = Элементы.ПозицииЗаказовСтраница.ПодчиненныеЭлементы.Получить(0);
		КарточкаПозицииЗаказа = Элементы.Вставить("КарточкаПозицииЗаказа" + Товар.Код, Тип("ГруппаФормы"), Элементы.ПозицииЗаказовСтраница, ПерваяПозицияЗаказа);
	Иначе
        КарточкаПозицииЗаказа = Элементы.Добавить("КарточкаПозицииЗаказа" + Товар.Код, Тип("ГруппаФормы"), Элементы.ПозицииЗаказовСтраница);
	КонецЕсли;

	КарточкаПозицииЗаказа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	КарточкаПозицииЗаказа.ОтображатьКакКарточку = Истина;
	КарточкаПозицииЗаказа.ОтображатьЗаголовок = Ложь;
	КарточкаПозицииЗаказа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	КарточкаПозицииЗаказа.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Авто;
	КарточкаПозицииЗаказа.РастягиватьПоГоризонтали = Истина;
	
	ПозицияЗаказаПерваяСтрока = Элементы.Добавить("ПозицияЗаказаПерваяСтрока" + Товар.Код, Тип("ГруппаФормы"), Элементы["КарточкаПозицииЗаказа" + Товар.Код]);
	ПозицияЗаказаПерваяСтрока.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ПозицияЗаказаПерваяСтрока.ОтображатьЗаголовок = Ложь;
	ПозицияЗаказаПерваяСтрока.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ПозицияЗаказаПерваяСтрока.ГоризонтальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	ПозицияЗаказаТовар = Элементы.Добавить("ПозицияЗаказаТовар" + Товар.Код, Тип("ДекорацияФормы"), Элементы["ПозицияЗаказаПерваяСтрока" + Товар.Код]);
	ПозицияЗаказаТовар.Вид = ВидДекорацииФормы.Надпись;
	ПозицияЗаказаТовар.Заголовок = СтрЗаменить(Товар.Наименование, " ", Символы.НПП);
	ПозицияЗаказаТовар.Шрифт = ШрифтыСтиля.ТекстПервогоУровня;
	ПозицияЗаказаТовар.РастягиватьПоГоризонтали = Истина;
	ПозицияЗаказаТовар.АвтоМаксимальнаяШирина = Ложь;
	
	УдалениеПозицииТовара = Элементы.Добавить("УдалениеПозицииТовара" + Товар.Код, Тип("ДекорацияФормы"), Элементы["ПозицияЗаказаПерваяСтрока" + Товар.Код]);
	УдалениеПозицииТовара.Вид = ВидДекорацииФормы.Картинка;
	УдалениеПозицииТовара.Картинка = БиблиотекаКартинок.УдалениеПозицииЗаказа; 
	УдалениеПозицииТовара.Подсказка = НСтр("ru = 'Удалить позицию заказа'", "ru");
	УдалениеПозицииТовара.Гиперссылка = Истина;
	УдалениеПозицииТовара.УстановитьДействие("Нажатие", "УдалениеПозициюТовараНажатие");
	УдалениеПозицииТовара.ОтображениеФона = ОтображениеФонаКартинки.ОтображатьИУвеличиватьРазмер;  
	
	ПозицияЗаказаВтораяСтрока = Элементы.Добавить("ПозицияЗаказаВтораяСтрока" + Товар.Код, Тип("ГруппаФормы"), Элементы["КарточкаПозицииЗаказа" + Товар.Код]);
	ПозицияЗаказаВтораяСтрока.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ПозицияЗаказаВтораяСтрока.ОтображатьЗаголовок = Ложь;
	ПозицияЗаказаВтораяСтрока.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ПозицияЗаказаВтораяСтрока.ГоризонтальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;

	ПозицияЗаказаЦена = Элементы.Добавить("ПозицияЗаказаЦена" + Товар.Код, Тип("ДекорацияФормы"), Элементы["ПозицияЗаказаВтораяСтрока" + Товар.Код]);
	ПозицияЗаказаЦена.Вид = ВидДекорацииФормы.Надпись;
	ПозицияЗаказаЦена.Заголовок = ПолучитьЗаголовокЦеныПозицииЗаказа(Цена, Количество);
	ПозицияЗаказаЦена.Шрифт = ШрифтыСтиля.ТекстВторогоУровня;
	ПозицияЗаказаЦена.РастягиватьПоГоризонтали = Истина;
	ПозицияЗаказаЦена.АвтоМаксимальнаяШирина = Ложь;

	ПозицияЗаказаИтого = Элементы.Добавить("ПозицияЗаказаИтого" + Товар.Код, Тип("ДекорацияФормы"), Элементы["ПозицияЗаказаВтораяСтрока" + Товар.Код]);
	ПозицияЗаказаИтого.Вид = ВидДекорацииФормы.Надпись;
	ПозицияЗаказаИтого.Заголовок = ПолучитьЗаголовокИтогоПозицииЗаказа(Цена, Количество);
	ПозицияЗаказаИтого.Шрифт = ШрифтыСтиля.ТекстПервогоУровня;

КонецПроцедуры

&НаСервере
Процедура ОбновитьКнопкуКОплате()

	СуммаКОплате = 0;
	Для Каждого ПозицияЗаказов Из ПозицииЗаказов Цикл
		СуммаКОплате = СуммаКОплате + (ПозицияЗаказов.Цена * ПозицияЗаказов.Количество);
	КонецЦикла;

	Если СуммаКОплате = 0 Тогда
		Элементы.ПерейтиКОплате.Заголовок = НСтр("ru = 'К оплате'", "ru");
		Элементы.ПерейтиКОплате.Доступность = Ложь;
	Иначе
		Элементы.ПерейтиКОплате.Заголовок = НСтр("ru = 'К оплате '", "ru") + ФорматироватьЦену(СуммаКОплате);
		Элементы.ПерейтиКОплате.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьСтраницыПозицийЗаказов()

	Элементы.ПозицииЗаказовСтраницы.ТекущаяСтраница = ?(Элементы.ПозицииЗаказовСтраница.ПодчиненныеЭлементы.Количество() = 0, Элементы.НетЗаказовСтраница, Элементы.ПозицииЗаказовСтраница); 

КонецПроцедуры

&НаКлиенте
Процедура УдалениеПозициюТовараНажатие(Элемент)

	КодТовара = СтрЗаменить(ТекущийЭлемент.Имя, "УдалениеПозицииТовара", "");
	УдалитьПозициюЗаказа(КодТовара);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПозициюЗаказа(КодТовара)

	Товар = Справочники.Товары.НайтиПоКоду(КодТовара);
	ПараметрыОтбора = Новый Структура;
    ПараметрыОтбора.Вставить("Товар", Товар);
	СтрокиКоллекции = ПозицииЗаказов.НайтиСтроки(ПараметрыОтбора);
	Если СтрокиКоллекции.Количество() > 0 Тогда
		ПозицияЗаказа = СтрокиКоллекции[0];
		Если ПозицияЗаказа.Количество > 0 Тогда
			ПозицияЗаказа.Количество = 0;
			ПозицияЗаказа.Сумма = ПозицияЗаказа.Количество * ПозицияЗаказа.Цена;
			Если ПозицияЗаказа.Количество = 0 Тогда
				Элементы.Удалить(Элементы["КарточкаПозицииЗаказа" + КодТовара]);  
				Индекс = ПозицииЗаказов.Индекс(ПозицияЗаказа);
				ПозицииЗаказов.Удалить(Индекс);
			Иначе
				Элементы["ПозицияЗаказаЦена" + КодТовара].Заголовок = ПолучитьЗаголовокЦеныПозицииЗаказа(ПозицияЗаказа.Цена, ПозицияЗаказа.Количество);
				Элементы["ПозицияЗаказаИтого" + КодТовара].Заголовок = ПолучитьЗаголовокИтогоПозицииЗаказа(ПозицияЗаказа.Цена, ПозицияЗаказа.Количество);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьКнопкуКОплате();
	ОбновитьСтраницыПозицийЗаказов();

КонецПроцедуры

&НаСервере
Процедура ДобавитьПозициюЗаказа(Товар)

	КодТовара = Товар.Код;
	ПараметрыОтбора = Новый Структура;
    ПараметрыОтбора.Вставить("Товар", Товар);
	СтрокиКоллекции = ПозицииЗаказов.НайтиСтроки(ПараметрыОтбора);
	Если СтрокиКоллекции.Количество() > 0 Тогда
		ПозицияЗаказа = СтрокиКоллекции[0];
		ПозицияЗаказа.Количество = ПозицияЗаказа.Количество + 1;
		ПозицияЗаказа.Сумма = ПозицияЗаказа.Количество * ПозицияЗаказа.Цена;
		Элементы["ПозицияЗаказаЦена" + КодТовара].Заголовок = ПолучитьЗаголовокЦеныПозицииЗаказа(ПозицияЗаказа.Цена, ПозицияЗаказа.Количество);
		Элементы["ПозицияЗаказаИтого" + КодТовара].Заголовок = ПолучитьЗаголовокИтогоПозицииЗаказа(ПозицияЗаказа.Цена, ПозицияЗаказа.Количество);
	ИначеЕсли СтрокиКоллекции.Количество() = 0 Тогда
		Цена = ПолучитьПоследнююРозничнуюЦенуТовара(Товар);
		СоздатьПозициюЗаказа(Товар, Цена, 1);
	КонецЕсли;
	
	ОбновитьКнопкуКОплате();
	ОбновитьСтраницыПозицийЗаказов();

КонецПроцедуры

&НаСервере
Процедура ОчиститьВсеПозицииЗаказа()

	ПозицииЗаказов.Очистить();

	МассивЭлементовНаУдаление = Новый Массив;
	Для Каждого КарточкаПозицииЗаказа Из Элементы.ПозицииЗаказовСтраница.ПодчиненныеЭлементы Цикл
		МассивЭлементовНаУдаление.Добавить(КарточкаПозицииЗаказа);
	КонецЦикла;
	Для Каждого ЭлементНаУдаление Из МассивЭлементовНаУдаление Цикл
		Элементы.Удалить(ЭлементНаУдаление);
	КонецЦикла;

	ОбновитьКнопкуКОплате();
	ОбновитьСтраницыПозицийЗаказов();

КонецПроцедуры

&НаСервере
Функция ФорматироватьЦену(Цена)

	Возврат Формат(Цена, "NFD=2") + Символы.НПП + Валюта;

КонецФункции

&НаСервере
Функция ПолучитьЗаголовокЦеныПозицииЗаказа(Цена, Количество)

	Возврат ФорматироватьЦену(Цена) + Символы.НПП + "×" + Символы.НПП + Строка(Количество);

КонецФункции

&НаСервере
Функция ПолучитьЗаголовокИтогоПозицииЗаказа(Цена, Количество)

	Возврат ФорматироватьЦену(Цена * Количество);

КонецФункции

&НаКлиенте
Процедура КарточкаГруппыТоваровНажатие(Элемент)

	ИндексТовара = Число(СтрЗаменить(Элемент.Имя, "КарточкаГруппыТоваров", ""));
	СтрокаТовара = ТоварыГруппы.Получить(ИндексТовара);
	ОткрытьГруппуТоваров(СтрокаТовара.Товар);

КонецПроцедуры

&НаКлиенте
Процедура КарточкаТовараНажатие(Элемент)

	ИндексТовара = Число(СтрЗаменить(Элемент.Имя, "КарточкаТовара", ""));
	СтрокаТовара = ТоварыГруппы.Получить(ИндексТовара);
	ДобавитьПозициюЗаказа(СтрокаТовара.Товар);

КонецПроцедуры

&НаКлиенте
Процедура КарточкаПоискаНажатие(Элемент)

	ИндексТовара = Число(СтрЗаменить(Элемент.Имя, "КарточкаПоиска", ""));
	СтрокаТовара = НайденныеТовары.Получить(ИндексТовара);
	ДобавитьПозициюЗаказа(СтрокаТовара.Товар);

КонецПроцедуры

&НаКлиенте
Процедура КарточкаНазадНажатие(Элемент)
	
	ОткрытьРодительскуюГруппуТоваров();

КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	ОтфильтроватьКарточкиНаКлиенте(Текст);

КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	ОтфильтроватьКарточкиНаКлиенте("");

КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКОплате(Команда)

    СуммаКОплате = 0;
	Для Каждого ПозицияЗаказов Из ПозицииЗаказов Цикл
		СуммаКОплате = СуммаКОплате + (ПозицияЗаказов.Цена * ПозицияЗаказов.Количество);
	КонецЦикла;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СуммаКОплате", СуммаКОплате);
	ПараметрыФормы.Вставить("ПозицииЗаказов", ПозицииЗаказов);
	ПараметрыФормы.Вставить("Валюта", Валюта);

    ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОповещениеОЗакрытииФормыОплатыНаличными", ЭтаФорма);
	
	ОткрытьФорму("Обработка.РабочееМестоКассира.Форма.ФормаОплатаНаличными", ПараметрыФормы, ЭтаФорма,,,, ОповещениеОЗакрытии);

КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОЗакрытииФормыОплатыНаличными(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Если РезультатЗакрытия <> Неопределено Тогда
		ОчиститьВсеПозицииЗаказа();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НастройкиРабочегоМестаКассира(Команда)

	ОткрытьФорму("Обработка.РабочееМестоКассира.Форма.ФормаНастройкиРабочегоМестаКассира",, ЭтаФорма);

КонецПроцедуры

